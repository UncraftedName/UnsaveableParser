// ReSharper disable All
using SaveParser.Parser.SaveFieldInfo.DataMaps.CustomFields;
using static SaveParser.Parser.SaveFieldInfo.FieldType;

namespace SaveParser.Parser.SaveFieldInfo.DataMaps.DataMapGenerators {
	
	public sealed class AI_Maps : DataMapGenerator {
		
		public const int PORTAL_FLOOR_TURRET_NUM_ROPES = 4;
		public const int SECURITY_CAMERA_NUM_ROPES = 2;
		public const int SNPCINT_NUM_PHASES = 3;
		public const int SPEECH_NUM_CATEGORIES = 3;
		

		// this is a class that extends from CUtlVector<CAI_InterestTarget_t> but doesn't have its own datamap
		private void Define_CAI_InterestTarget(string fieldName)
			=> DefineEmbeddedVector(fieldName, "CAI_InterestTarget_t");


		private void DefineBaseNpcInteractable() {
			DefineOutput("m_OnAlyxStartedInteraction", "OnAlyxStartedInteraction");
			DefineOutput("m_OnAlyxFinishedInteraction", "OnAlyxFinishedInteraction");
			DefineInputFunc("InteractivePowerDown", "InputPowerdown", VOID);
		}


		protected override void CreateDataMaps() {
			BeginDataMap("AIScheduleState_t");
			DefineField("iCurTask", INTEGER);
			DefineField("fTaskStatus", INTEGER); // enum TaskStatus_e
			DefineField("timeStarted", FLOAT);
			DefineField("timeCurTaskStarted", FLOAT);
			DefineField("taskFailureCode", INTEGER); // AI_TaskFailureCode_t
			DefineField("iTaskInterrupt", INTEGER);
			DefineField("bTaskRanAutomovement", BOOLEAN);
			DefineField("bTaskUpdatedYaw", BOOLEAN);
			DefineField("bScheduleWasInterrupted", BOOLEAN);
			
			DefineRootClassNoMap("CAI_Component");

			BeginDataMap("CAI_Senses", "CAI_Component");
			DefineField("m_LookDist", FLOAT);
			DefineField("m_LastLookDist", FLOAT);
			DefineField("m_TimeLastLook", TIME);
			DefineField("m_iSensingFlags", INTEGER);
			DefineVector("m_SeenHighPriority", EHANDLE);
			DefineVector("m_SeenNPCs", EHANDLE);
			DefineVector("m_SeenMisc", EHANDLE);
			DefineField("m_TimeLastLookHighPriority", TIME);
			DefineField("m_TimeLastLookNPCs", TIME);
			DefineField("m_TimeLastLookMisc", TIME);
			
			BeginDataMap("CAI_MoveMonitor"); // Watch an entity, trigger if moved more than a tolerance
			DefineField("m_vMark", POSITION_VECTOR);
			DefineField("m_flMarkTolerance", FLOAT);
			
			BeginDataMap("CAI_ShotRegulator");
			DefineField("m_flNextShotTime", TIME);
			DefineField("m_bInRestInterval", BOOLEAN);
			DefineField("m_nBurstShotsRemaining", SHORT);
			DefineField("m_nMinBurstShots", SHORT);
			DefineField("m_nMaxBurstShots", SHORT);
			DefineField("m_flMinRestInterval", FLOAT);
			DefineField("m_flMaxRestInterval", FLOAT);
			DefineField("m_flMinBurstInterval", FLOAT);
			DefineField("m_flMaxBurstInterval", FLOAT);
			DefineField("m_bDisabled", BOOLEAN);
			
			BeginDataMap("CAI_Path");
			DefineField("m_goalTolerance", FLOAT);
			DefineCustomField("m_activity", ActivityData.Restore);
			DefineField("m_target", EHANDLE);
			DefineField("m_sequence", INTEGER);
			DefineField("m_vecTargetOffset", VECTOR);
			DefineField("m_waypointTolerance", FLOAT);
			DefineCustomField("m_arrivalActivity", ActivityData.Restore);
			DefineField("m_arrivalSequence", INTEGER);
			DefineField("m_bGoalPosSet", BOOLEAN);
			DefineField("m_goalPos", POSITION_VECTOR);
			DefineField("m_bGoalTypeSet", BOOLEAN);
			DefineField("m_goalType", INTEGER);
			DefineField("m_goalFlags", INTEGER);
			DefineField("m_routeStartTime", TIME);
			DefineField("m_goalDirection", VECTOR);
			DefineField("m_goalDirectionTarget", EHANDLE);
			DefineField("m_goalSpeed", FLOAT);
			DefineField("m_goalSpeedTarget", EHANDLE);
			DefineField("m_goalStoppingDistance", FLOAT);
			
			BeginDataMap("CAI_Navigator", "CAI_Component");
			DefineField("m_navType", INTEGER);
			DefineEmbeddedField("m_pPath", "CAI_Path");
			DefineField("m_bValidateActivitySpeed", BOOLEAN);
			DefineField("m_bCalledStartMove", BOOLEAN);
			DefineField("m_fNavComplete", BOOLEAN);
			DefineField("m_bNotOnNetwork", BOOLEAN);
			DefineField("m_bLastNavFailed", BOOLEAN);
			DefineField("m_flNextSimplifyTime", TIME);
			DefineField("m_bForcedSimplify", BOOLEAN);
			DefineField("m_flLastSuccessfulSimplifyTime", TIME);
			DefineField("m_flTimeLastAvoidanceTriangulate", TIME);
			DefineField("m_timePathRebuildMax", FLOAT);
			DefineField("m_timePathRebuildDelay", FLOAT);
			DefineField("m_timePathRebuildFail", TIME);
			DefineField("m_timePathRebuildNext", TIME);
			DefineField("m_fRememberStaleNodes", BOOLEAN);
			DefineField("m_bNoPathcornerPathfinds", BOOLEAN);
			DefineField("m_bLocalSucceedOnWithinTolerance", BOOLEAN);
			DefineField("m_hBigStepGroundEnt", EHANDLE);
			DefineField("m_hLastBlockingEnt", EHANDLE);
			
			BeginDataMap("CAI_LocalNavigator", "CAI_Component");
			
			BeginDataMap("CAI_Pathfinder", "CAI_Component");
			DefineField("m_flLastStaleLinkCheckTime", TIME);
			
			BeginDataMap("CAI_MoveProbe", "CAI_Component");
			DefineField("m_bIgnoreTransientEntities", BOOLEAN);
			DefineField("m_hLastBlockingEnt", EHANDLE);
			
			BeginDataMap("CAI_Motor");
			DefineField("m_IdealYaw", FLOAT);
			DefineField("m_YawSpeed", FLOAT);
			DefineField("m_vecVelocity", VECTOR);
			DefineField("m_vecAngularVelocity", VECTOR);
			DefineField("m_nDismountSequence", INTEGER);
			DefineField("m_vecDismount", VECTOR);
			Define_CAI_InterestTarget("m_facingQueue");
			DefineField("m_bYawLocked", BOOLEAN);
			
			BeginDataMap("CAI_TacticalServices", "CAI_Component");
			DefineField("m_bAllowFindLateralLos", BOOLEAN);
			
			BeginDataMap("UnreachableEnt_t");
			DefineField("h_UnreachableEnt", EHANDLE);
			DefineField("fExpireTime", FLOAT);
			DefineField("vLocationWhenUnreachable", POSITION_VECTOR);
			
			BeginDataMap("ScriptedNPCInteraction_Phases_t");
			DefineField("iszSequence", STRING);
			DefineField("iActivity", INTEGER);
			
			BeginDataMap("ScriptedNPCInteraction_t");
			DefineField("iszInteractionName", STRING);
			DefineField("iFlags", INTEGER);
			DefineField("iTriggerMethod", INTEGER);
			DefineField("iLoopBreakTriggerMethod", INTEGER);
			DefineField("vecRelativeOrigin", VECTOR);
			DefineField("angRelativeAngles", VECTOR);
			DefineField("vecRelativeVelocity", VECTOR);
			DefineField("flDelay", FLOAT);
			DefineField("flDistSqr", FLOAT);
			DefineField("iszMyWeapon", STRING);
			DefineField("iszTheirWeapon", STRING);
			DefineEmbeddedField("sPhases", "ScriptedNPCInteraction_Phases_t", SNPCINT_NUM_PHASES);
			DefineField("matDesiredLocalToWorld", VMATRIX);
			DefineField("bValidOnCurrentEnemy", BOOLEAN);
			DefineField("flNextAttemptTime", TIME);
			
			BeginDataMap("CAI_MoveAndShootOverlay", "CAI_Component");
			DefineField("m_bMovingAndShooting", BOOLEAN);
			DefineField("m_bNoShootWhileMove", BOOLEAN);
			DefineField("m_initialDelay", FLOAT);
			DefineField("m_flSuspendUntilTime", TIME);

			BeginDataMap("CAI_BaseNPC", "CBaseCombatCharacter");
			DefineEmbeddedField("m_ScheduleState", "AIScheduleState_t");
			DefineField("m_IdealSchedule", INTEGER);
			DefineField("m_failSchedule", INTEGER);
			DefineField("m_bUsingStandardThinkTime", BOOLEAN);
			DefineField("m_flLastRealThinkTime", TIME);
			DefineField("m_flTimePingEffect", TIME);
			DefineField("m_bForceConditionsGather", BOOLEAN);
			DefineField("m_bConditionsGathered", BOOLEAN);
			DefineField("m_bSkippedChooseEnemy", BOOLEAN);
			DefineField("m_NPCState", INTEGER);
			DefineField("m_IdealNPCState", INTEGER);
			DefineField("m_flLastStateChangeTime", TIME);
			DefineField("m_Efficiency", INTEGER);
			DefineField("m_MoveEfficiency", INTEGER);
			DefineField("m_flNextDecisionTime", TIME);
			DefineKeyField("m_SleepState", "sleepstate", INTEGER);
			DefineField("m_SleepFlags", INTEGER);
			DefineKeyField("m_flWakeRadius", "wakeradius", FLOAT);
			DefineKeyField("m_bWakeSquad", "wakesquad", BOOLEAN);
			DefineField("m_nWakeTick", TICK);
			DefineCustomField("m_Activity", ActivityData.Restore);
			DefineCustomField("m_translatedActivity", ActivityData.Restore);
			DefineCustomField("m_IdealActivity", ActivityData.Restore);
			DefineCustomField("m_IdealTranslatedActivity", ActivityData.Restore);
			DefineCustomField("m_IdealWeaponActivity", ActivityData.Restore);
			DefineField("m_nIdealSequence", INTEGER);
			DefineEmbeddedField("m_pSenses", "CAI_Senses");
			DefineEmbeddedField("m_pLockedBestSound", "CSound");
			DefineField("m_hEnemy", EHANDLE);
			DefineField("m_flTimeEnemyAcquired", TIME);
			DefineField("m_hTargetEnt", EHANDLE);
			DefineEmbeddedField("m_GiveUpOnDeadEnemyTimer", "CRandStopwatch");
			DefineEmbeddedField("m_FailChooseEnemyTimer", "CSimpleSimTimer");
			DefineField("m_EnemiesSerialNumber", INTEGER);
			DefineField("m_flAcceptableTimeSeenEnemy", TIME);
			DefineEmbeddedField("m_UpdateEnemyPosTimer", "CSimpleSimTimer");
			DefineField("m_vecCommandGoal", VECTOR);
			DefineEmbeddedField("m_CommandMoveMonitor", "CAI_MoveMonitor");
			DefineField("m_flSoundWaitTime", TIME);
			DefineField("m_nSoundPriority", INTEGER);
			DefineField("m_flIgnoreDangerSoundsUntil", TIME);
			DefineField("m_afCapability", INTEGER);
			DefineField("m_flMoveWaitFinished", TIME);
			DefineField("m_hOpeningDoor", EHANDLE);
			DefineEmbeddedField("m_pNavigator", "CAI_Navigator");
			DefineEmbeddedField("m_pLocalNavigator", "CAI_LocalNavigator");
			DefineEmbeddedField("m_pPathfinder", "CAI_Pathfinder");
			DefineEmbeddedField("m_pMoveProbe", "CAI_MoveProbe");
			DefineEmbeddedField("m_pMotor", "CAI_Motor");
			DefineEmbeddedVector("m_UnreachableEnts", "UnreachableEnt_t");
			DefineField("m_hInteractionPartner", EHANDLE);
			DefineField("m_hLastInteractionTestTarget", EHANDLE);
			DefineField("m_hForcedInteractionPartner", EHANDLE);
			DefineField("m_flForcedInteractionTimeout", TIME);
			DefineField("m_vecForcedWorldPosition", POSITION_VECTOR);
			DefineField("m_bCannotDieDuringInteraction", BOOLEAN);
			DefineField("m_iInteractionState", INTEGER);
			DefineField("m_iInteractionPlaying", INTEGER);
			DefineEmbeddedVector("m_SciprtedInteractions", "ScriptedNPCInteraction_t");
			DefineField("m_flInteractionYaw", FLOAT);
			DefineEmbeddedField("m_CheckOnGroundTimer", "CSimpleSimTimer");
			DefineField("m_vDefaultEyeOffset", VECTOR);
			DefineField("m_flNextEyeLookTime", TIME);
			DefineField("m_flEyeIntegRate", FLOAT);
			DefineField("m_vEyeLookTarget", POSITION_VECTOR);
			DefineField("m_vCurEyeTarget", POSITION_VECTOR);
			DefineField("m_hEyeLookTarget", EHANDLE);
			DefineField("m_flHeadYaw", FLOAT);
			DefineField("m_flHeadPitch", FLOAT);
			DefineField("m_flOriginalYaw", FLOAT);
			DefineField("m_bInAScript", BOOLEAN);
			DefineField("m_scriptState", INTEGER);
			DefineField("m_hCine", EHANDLE);
			DefineCustomField("m_ScriptArrivalActivity", ActivityData.Restore);
			DefineField("m_strScriptArrivalSequence", STRING);
			DefineField("m_flSceneTime", TIME);
			DefineField("m_iszSceneCustomMoveSeq", STRING);
			DefineField("m_afMemory", INTEGER);
			DefineField("m_hEnemyOccluder", EHANDLE);
			DefineField("m_flSumDamage", FLOAT);
			DefineField("m_flLastDamageTime", TIME);
			DefineField("m_flLastPlayerDamageTime", TIME);
			DefineField("m_flLastSawPlayerTime", TIME);
			DefineField("m_flLastAttackTime", TIME);
			DefineField("m_flLastEnemyTime", TIME);
			DefineField("m_flNextWeaponSearchTime", TIME);
			DefineField("m_iszPendingWeapon", STRING);
			DefineKeyField("m_bIgnoreUnseenEnemies", "ignoreunseenenemies", BOOLEAN);
			DefineEmbeddedField("m_ShotRegulator", "CAI_ShotRegulator");
			DefineField("m_iDesiredWeaponState", INTEGER);
			DefineKeyField("m_SquadName", "squadname", STRING);
			DefineField("m_iMySquadSlot", INTEGER);
			DefineKeyField("m_strHintGroup", "hintgroup", STRING);
			DefineKeyField("m_bHintGroupNavLimiting", "hintlimiting", BOOLEAN);
			DefineEmbeddedField("m_pTacticalServices", "CAI_TacticalServices");
			DefineField("m_flWaitFinished", TIME);
			DefineField("m_flNextFlinchTime", TIME);
			DefineField("m_flNextDodgeTime", TIME);
			DefineEmbeddedField("m_MoveAndShootOverlay", "CAI_MoveAndShootOverlay");
			DefineField("m_vecLastPosition", POSITION_VECTOR);
			DefineField("m_vSavePosition", POSITION_VECTOR);
			DefineField("m_vInterruptSavePosition", POSITION_VECTOR);
			DefineField("m_pHintNode", EHANDLE);
			DefineField("m_cAmmoLoaded", INTEGER);
			DefineField("m_flDistTooFar", FLOAT);
			DefineField("m_hGoalEnt", EHANDLE);
			DefineField("m_flTimeLastMovement", TIME);
			DefineKeyField("m_spawnEquipment", "additionalequipment", STRING);
			DefineField("m_fNoDamageDecal", BOOLEAN);
			DefineField("m_hStoredPathTarget", EHANDLE);
			DefineField("m_vecStoredPathGoal", POSITION_VECTOR);
			DefineField("m_nStoredPathType", INTEGER);
			DefineField("m_fStoredPathFlags", INTEGER);
			DefineField("m_bDidDeathCleanup", BOOLEAN);
			DefineField("m_bCrouchDesired", BOOLEAN);
			DefineField("m_bForceCrouch", BOOLEAN);
			DefineField("m_bIsCrouching", BOOLEAN);
			DefineField("m_bPerformAvoidance", BOOLEAN);
			DefineField("m_bIsMoving", BOOLEAN);
			DefineField("m_bFadeCorpse", BOOLEAN);
			DefineField("m_iDeathPose", INTEGER);
			DefineField("m_iDeathFrame", INTEGER);
			DefineField("m_bCheckContacts", BOOLEAN);
			DefineField("m_bSpeedModActive", BOOLEAN);
			DefineField("m_iSpeedModRadius", INTEGER);
			DefineField("m_iSpeedModSpeed", INTEGER);
			DefineField("m_hEnemyFilter", EHANDLE);
			DefineKeyField("m_iszEnemyFilterName", "enemyfilter", STRING);
			DefineField("m_bImportanRagdoll", BOOLEAN);
			DefineField("m_bPlayerAvoidState", BOOLEAN);
			DefineOutput("m_OnDamaged", "OnDamaged");
			DefineOutput("m_OnDeath", "OnDeath");
			DefineOutput("m_OnHalfHealth", "OnHalfHealth");
			DefineOutput("m_OnFoundEnemy", "OnFoundEnemy");
			DefineOutput("m_OnLostEnemyLOS", "OnLostEnemyLOS");
			DefineOutput("m_OnLostEnemy", "OnLostEnemy");
			DefineOutput("m_OnFoundPlayer", "OnFoundPlayer");
			DefineOutput("m_OnLostPlayerLOS", "OnLostPlayerLOS");
			DefineOutput("m_OnLostPlayer", "OnLostPlayer");
			DefineOutput("m_OnHearWorld", "OnHearWorld");
			DefineOutput("m_OnHearPlayer", "OnHearPlayer");
			DefineOutput("m_OnHearCombat", "OnHearCombat");
			DefineOutput("m_OnDamagedByPlayer", "OnDamagedByPlayer");
			DefineOutput("m_OnDamagedByPlayerSquad", "OnDamagedByPlayerSquad");
			DefineOutput("m_OnDenyCommanderUse", "OnDenyCommanderUse");
			DefineOutput("m_OnRappelTouchdown", "OnRappelTouchdown");
			DefineOutput("m_OnWake", "OnWake");
			DefineOutput("m_OnSleep", "OnSleep");
			DefineOutput("m_OnForcedInteractionStarted", "OnForcedInteractionStarted");
			DefineOutput("m_OnForcedInteractionAborted", "OnForcedInteractionAborted");
			DefineOutput("m_OnForcedInteractionFinished", "OnForcedInteractionFinished");
			DefineInputFunc("SetRelationship", "InputSetRelationship", STRING);
			DefineInputFunc("SetEnemyFilter", "InputSetEnemyFilter", STRING);
			DefineInputFunc("SetHealth", "InputSetHealth", INTEGER);
			DefineInputFunc("BeginRappel", "InputBeginRappel", VOID);
			DefineInputFunc("SetSquad", "InputSetSquad", STRING);
			DefineInputFunc("Wake", "InputWake", VOID);
			DefineInputFunc("ForgetEntity", "InputForgetEntity", STRING);
			DefineInputFunc("IgnoreDangerSounds", "InputIgnoreDangerSounds", FLOAT);
			DefineInputFunc("Break", "InputBreak", VOID);
			DefineInputFunc("StartScripting", "InputStartScripting", VOID);
			DefineInputFunc("StopScripting", "InputStopScripting", VOID);
			DefineInputFunc("GagEnable", "InputGagEnable", VOID);
			DefineInputFunc("GagDisable", "InputGagDisable", VOID);
			DefineInputFunc("InsideTransition", "InputInsideTransition", VOID);
			DefineInputFunc("OutsideTransition", "InputOutsideTransition", VOID);
			DefineInputFunc("ActivateSpeedModifier", "InputActivateSpeedModifier", VOID);
			DefineInputFunc("DisableSpeedModifier", "InputDisableSpeedModifier", VOID);
			DefineInputFunc("SetSpeedModRadius", "InputSetSpeedModifierRadius", INTEGER);
			DefineInputFunc("SetSpeedModSpeed", "InputSetSpeedModifierSpeed", INTEGER);
			DefineInputFunc("HolsterWeapon", "InputHolsterWeapon", VOID);
			DefineInputFunc("HolsterAndDestroyWeapon", "InputHolsterAndDestroyWeapon", VOID);
			DefineInputFunc("UnholsterWeapon", "InputUnholsterWeapon", VOID);
			DefineInputFunc("ForceInteractionWithNPC", "InputForceInteractionWithNPC", STRING);
			DefineInputFunc("UpdateEnemyMemory", "InputUpdateEnemyMemory", STRING);
			DefineUseFunc("NPCUse");
			DefineThinkFunc("CallNPCThink");
			DefineThinkFunc("CorpseFallThink");
			DefineThinkFunc("NPCInitThink");

			DataMapProxy("CAI_BehaviorHost<CAI_BaseNPC>", "CAI_BaseNPC");

			DataMapProxy("CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC>>", "CAI_BehaviorHost<CAI_BaseNPC>");

			DataMapProxy("CAI_BaseHumanoidBase", "CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC>>");

			DataMapProxy("CAI_BaseHumanoid", "CAI_BaseHumanoidBase");

			DataMapProxy("CAI_ExpresserHost<CAI_BaseHumanoid>", "CAI_BaseHumanoid");

			BeginDataMap("CAI_BaseActor", "CAI_ExpresserHost<CAI_BaseHumanoid>");
			DefineField("m_fLatchedPositions", INTEGER);
			DefineField("m_latchedEyeOrigin", VECTOR);
			DefineField("m_latchedEyeDirection", VECTOR);
			DefineField("m_latchedHeadDirection", VECTOR);
			DefineField("m_goalHeadDirection", VECTOR);
			DefineField("m_goalHeadInfluence", FLOAT);
			DefineField("m_goalSpineYaw", FLOAT);
			DefineField("m_goalBodyYaw", FLOAT);
			DefineField("m_goalHeadCorrection", VECTOR);
			DefineField("m_flBlinktime", TIME);
			DefineField("m_hLookTarget", EHANDLE);
			Define_CAI_InterestTarget("m_lookQueue");
			Define_CAI_InterestTarget("m_syntheticLookQueue");
			Define_CAI_InterestTarget("m_randomLookQueue");
			DefineField("m_flNextRandomLookTime", TIME);
			DefineField("m_iszExpressionScene", STRING);
			DefineField("m_hExpressionSceneEnt", EHANDLE);
			DefineField("m_flNextRandomExpressionTime", TIME);
			DefineField("m_iszIdleExpression", STRING);
			DefineField("m_iszAlertExpression", STRING);
			DefineField("m_iszCombatExpression", STRING);
			DefineField("m_iszDeathExpression", STRING);
			DefineField("m_ParameterBodyYaw", INTEGER);
			DefineField("m_ParameterSpineYaw", INTEGER);
			DefineField("m_ParameterNeckTrans", INTEGER);
			DefineField("m_ParameterHeadYaw", INTEGER);
			DefineField("m_ParameterHeadPitch", INTEGER);
			DefineField("m_ParameterHeadRoll", INTEGER);
			DefineField("m_FlexweightBodyRightLeft", INTEGER);
			DefineField("m_FlexweightChestRightLeft", INTEGER);
			DefineField("m_FlexweightHeadForwardBack", INTEGER);
			DefineField("m_FlexweightHeadRightLeft", INTEGER);
			DefineField("m_FlexweightHeadUpDown", INTEGER);
			DefineField("m_FlexweightHeadTilt", INTEGER);
			DefineField("m_ParameterGestureHeight", INTEGER);
			DefineField("m_ParameterGestureWidth", INTEGER);
			DefineField("m_FlexweightGestureUpDown", INTEGER);
			DefineField("m_FlexweightGestureRightLeft", INTEGER);
			DefineField("m_flAccumYawDelta", FLOAT);
			DefineField("m_flAccumYawScale", FLOAT);
			DefineField("m_flextarget", FLOAT, 64);
			DefineKeyField("m_bDontUseSemaphore", "DontUseSpeechSemaphore",  BOOLEAN);
			DefineKeyField("m_iszExpressionOverride", "ExpressionOverride", STRING);
			DefineEmbeddedField("m_pExpresser", "CAI_Expresser");
			DefineInputFunc("SetExpressionOverride", "InputSetExpressionOverride", STRING);

			BeginDataMap("CGenericActor", "CAI_BaseActor");
			LinkNamesToMap("generic_actor");
			DefineKeyField("m_strHullName", "hull_name", STRING);
			
			BeginDataMap("AI_WayPoint_t");
			DefineField("vecLocation", POSITION_VECTOR);
			DefineField("flYaw", FLOAT);
			DefineField("hPathCorner", EHANDLE);
			DefineField("m_hData", EHANDLE);
			DefineField("m_fWayPointFlags", INTEGER); // WayPointFlags_t
			DefineField("m_iWPType", INTEGER);
			
			DataMapProxy("CNPCBaseInteractive<CAI_BaseNPC>", "CAI_BaseNPC");
			
			BeginDataMap("CNPC_SecurityCamera", "CNPCBaseInteractive<CAI_BaseNPC>");
			LinkNamesToMap("npc_security_camera");
			DefineField("m_hRopes", EHANDLE, SECURITY_CAMERA_NUM_ROPES);
			DefineField("m_hEyeGlow", EHANDLE);
			DefineField("m_bAutoStart", BOOLEAN);
			DefineField("m_bActive", BOOLEAN);
			DefineField("m_bBlinkState", BOOLEAN);
			DefineField("m_bEnabled", BOOLEAN);
			DefineField("m_flLastSight", TIME);
			DefineField("m_flPingTime", TIME);
			DefineField("m_vecGoalAngles", VECTOR);
			DefineField("m_vecCurrentAngles", VECTOR);
			DefineField("m_vNoisePos", VECTOR);
			DefineField("m_iTicksTillNextNoise", INTEGER);
			DefineSoundPatch("m_pMovementSound");
			DefineThinkFunc("Retire");
			DefineThinkFunc("Deploy");
			DefineThinkFunc("ActiveThink");
			DefineThinkFunc("SearchThink");
			DefineThinkFunc("DeathThink");
			DefineInputFunc("Toggle", "InputToggle", VOID);
			DefineInputFunc("Enable", "InputEnable", VOID);
			DefineInputFunc("Disable", "InputDisable", VOID);
			DefineInputFunc("Ragdoll", "InputRagdoll", VOID);
			DefineOutput("m_OnDeploy", "OnDeploy");
			DefineOutput("m_OnRetire", "OnRetire");
			if (Game == Game.PORTAL2)
				DefineField("m_nTeamToLookAt", INTEGER);

			BeginDataMap("CNPC_FloorTurret", "CNPCBaseInteractive<CAI_BaseNPC>");
			DefineField("m_iAmmoType", INTEGER);
			DefineField("m_bAutoStart", BOOLEAN);
			DefineField("m_bActive", BOOLEAN);
			DefineField("m_bBlinkState", BOOLEAN);
			DefineField("m_bEnabled", BOOLEAN);
			DefineField("m_bNoAlarmSounds", BOOLEAN);
			DefineField("m_flShotTime", TIME);
			DefineField("m_flLastSight", TIME);
			DefineField("m_flThrashTime", TIME);
			DefineField("m_flPingTime", TIME);
			DefineField("m_flNextActivateSoundTime", TIME);
			DefineField("m_bCarriedByPlayer", BOOLEAN);
			DefineField("m_bUseCarryAngles", BOOLEAN);
			DefineField("m_flPlayerDropTime", TIME);
			DefineField("m_hLastNPCToKickMe", EHANDLE);
			DefineField("m_flKnockOverFailedTime", TIME);
			DefineField("m_flDestructStartTime", TIME);
			DefineField("m_hFizzleEffect", EHANDLE);
			DefineField("m_vecGoalAngles", VECTOR);
			DefineField("m_iEyeAttachment", INTEGER);
			DefineField("m_iMuzzleAttachment", INTEGER);
			DefineField("m_iEyeState", INTEGER);
			DefineField("m_hEyeGlow", EHANDLE);
			DefineField("m_pMotionController", EHANDLE);
			DefineField("m_vecEnemyLKP", VECTOR);
			DefineField("m_hLaser", EHANDLE);
			DefineField("m_bSelfDestructing", BOOLEAN);
			DefineField("m_hPhysicsAttacker", EHANDLE);
			DefineField("m_flLastPhysicsInfluenceTime", TIME);
			DefineField("m_bHackedByAlyx", BOOLEAN);
			DefineKeyField("m_iKeySkin", "SkinNumber", INTEGER);
			DefineThinkFunc("Retire");
			DefineThinkFunc("Deploy");
			DefineThinkFunc("ActiveThink");
			DefineThinkFunc("SearchThink");
			DefineThinkFunc("AutoSearchThink");
			DefineThinkFunc("TippedThink");
			DefineThinkFunc("InactiveThink");
			DefineThinkFunc("SuppressThink");
			DefineThinkFunc("DisabledThink");
			DefineThinkFunc("SelfDestructThink");
			DefineThinkFunc("BreakThink");
			DefineUseFunc("ToggleUse");
			DefineInputFunc("Toggle", "InputToggle", VOID);
			DefineInputFunc("Enable", "InputEnable", VOID);
			DefineInputFunc("Disable", "InputDisable", VOID);
			DefineInputFunc("DepleteAmmo", "InputDepleteAmmo", VOID);
			DefineInputFunc("RestoreAmmo", "InputRestoreAmmo", VOID);
			DefineInputFunc("SelfDestruct", "InputSelfDestruct", VOID);
			DefineOutput("m_OnDeploy", "OnDeploy");
			DefineOutput("m_OnRetire", "OnRetire");
			DefineOutput("m_OnTipped", "OnTipped");
			DefineOutput("m_OnPhysGunPickup", "OnPhysGunPickup");
			DefineOutput("m_OnPhysGunDrop", "OnPhysGunDrop");
			DefineBaseNpcInteractable();
			
			BeginDataMap("CNPC_Portal_FloorTurret", "CNPC_FloorTurret");
			LinkNamesToMap("npc_portal_turret_floor");
			DefineField("m_hRopes", EHANDLE, PORTAL_FLOOR_TURRET_NUM_ROPES);
			DefineField("m_bOutOfAmmo", BOOLEAN);
			DefineField("m_bLaserOn", BOOLEAN);
			DefineField("m_sLaserHaloSprite", INTEGER);
			DefineField("m_flDistToEnemy", FLOAT);
			DefineField("m_bShootWithBottomBarrels", BOOLEAN);
			DefineField("m_fSearchSpeed", FLOAT);
			DefineField("m_fMovingTargetThreashold", FLOAT);
			DefineField("m_iLastState", INTEGER);
			DefineField("m_fNextTalk", FLOAT);
			DefineField("m_bDelayTippedTalk", BOOLEAN);
			DefineKeyField("m_bDamageForce", "DamageForce", BOOLEAN);
			DefineThinkFunc("Retire");
			DefineThinkFunc("Deploy");
			DefineThinkFunc("ActiveThink");
			DefineThinkFunc("SearchThink");
			DefineThinkFunc("AutoSearchThink");
			DefineThinkFunc("TippedThink");
			DefineThinkFunc("HeldThink");
			DefineThinkFunc("InactiveThink");
			DefineThinkFunc("SuppressThink");
			DefineThinkFunc("DisabledThink");
			DefineInputFunc("FireBullet", "InputFireBullet", STRING);

			BeginDataMap("CNPC_RocketTurret", "CAI_BaseNPC");
			LinkNamesToMap("npc_rocket_turret");
			DefineField("m_bEnabled", BOOLEAN);
			DefineField("m_vecGoalAngles", VECTOR);
			DefineField("m_vecCurrentAngles", VECTOR);
			DefineField("m_bHasSightOfEnemy", BOOLEAN);
			DefineField("m_vecAnglesToEnemy", VECTOR);
			DefineField("m_vecDirToEnemy", VECTOR);
			DefineField("m_flDistToEnemy", FLOAT);
			DefineField("m_flTimeSpentDying", FLOAT);
			DefineField("m_flTimeLocking", FLOAT);
			DefineField("m_flTimeLastFired", FLOAT);
			DefineField("m_iLaserState", INTEGER);
			DefineField("m_nSiteHalo", INTEGER);
			DefineField("m_flTimeSpentPaused", FLOAT);
			DefineField("m_flPauseLength", FLOAT);
			DefineField("m_flTotalDivergenceX", FLOAT);
			DefineField("m_flTotalDivergenceY", FLOAT);
			DefineField("m_iPosePitch", INTEGER);
			DefineField("m_iPoseYaw", INTEGER);
			DefineField("m_hCurRocket", EHANDLE);
			DefineField("m_iMuzzleAttachment", INTEGER);
			DefineField("m_iLightAttachment", INTEGER);
			DefineField("m_muzzleToWorldTick", INTEGER);
			DefineField("m_muzzleToWorld", MATRIX3X4_WORLDSPACE);
			DefineEmbeddedField("m_BoneFollowerManager", "CBoneFollowerManager");
			DefineThinkFunc("SearchThink");
			DefineThinkFunc("FollowThink");
			DefineThinkFunc("LockingThink");
			DefineThinkFunc("FiringThink");
			DefineThinkFunc("DyingThink");
			DefineThinkFunc("DeathThink");
			DefineThinkFunc("OpeningThink");
			DefineThinkFunc("ClosingThink");
			DefineInputFunc("Toggle", "InputToggle", VOID);
			DefineInputFunc("Enable", "InputEnable", VOID);
			DefineInputFunc("Disable", "InputDisable", VOID);
			DefineInputFunc("SetTarget", "InputSetTarget", STRING);
			DefineInputFunc("Destroy", "InputDestroy", VOID);
			DefineOutput("m_OnFoundTarget", "OnFoundTarget");
			DefineOutput("m_OnLostTarget", "OnLostTarget");
			
			BeginDataMap("CAI_Expresser");
			DefineCustomField("m_ConceptHistories", ConceptHistories.Restore);
			DefineField("m_flStopTalkTime", TIME);
			DefineField("m_flStopTalkTimeWithoutDelay", TIME);
			DefineField("m_flBlockedTalkTime", TIME);
			DefineField("m_voicePitch", INTEGER);
			DefineField("m_flLastTimeAcceptedSpeak", TIME);
			
			BeginDataMap("CNPC_Furniture", "CAI_BaseActor");
			LinkNamesToMap("npc_furniture", "monster_furniture");
			DefineEmbeddedField("m_BoneFollowerManager", "CBoneFollowerManager");
			DefineInputFunc("DisablePlayerCollision", "InputDisablePlayerCollision", VOID);
			DefineInputFunc("EnablePlayerCollision", "InputEnablePlayerCollision", VOID);
			
			BeginDataMap("CAI_InterestTarget_t");
			DefineField("m_eType", INTEGER);
			DefineField("m_hTarget", EHANDLE);
			DefineField("m_vecPosition", POSITION_VECTOR);
			DefineField("m_flStartTime", TIME);
			DefineField("m_flEndTime", TIME);
			DefineField("m_flRamp", FLOAT);
			DefineField("m_flInterest", FLOAT);
			
			BeginDataMap("CAI_ScriptedSequence", "CBaseEntity");
			LinkNamesToMap("scripted_sequence");
			DefineKeyField("m_iszEntry", "m_iszEntry", STRING);
			DefineKeyField("m_iszPreIdle", "m_iszIdle", STRING);
			DefineKeyField("m_iszPlay", "m_iszPlay", STRING);
			DefineKeyField("m_iszPostIdle", "m_iszPostIdle", STRING);
			DefineKeyField("m_iszCustomMove", "m_iszCustomMove", STRING);
			DefineKeyField("m_iszNextScript", "m_iszNextScript", STRING);
			DefineKeyField("m_iszEntity", "m_iszEntity", STRING);
			DefineKeyField("m_fMoveTo", "m_fMoveTo", INTEGER);
			DefineKeyField("m_flRadius", "m_flRadius", FLOAT);
			DefineKeyField("m_flRepeat", "m_flRepeat", FLOAT);
			DefineField("m_bIsPlayingEntry", BOOLEAN);
			DefineKeyField("m_bLoopActionSequence", "m_bLoopActionSequence", BOOLEAN);
			DefineKeyField("m_bSynchPostIdles", "m_bSynchPostIdles", BOOLEAN);
			DefineKeyField("m_bIgnoreGravity", "m_bIgnoreGravity", BOOLEAN);
			DefineKeyField("m_bDisableNPCCollisions", "m_bDisableNPCCollisions", BOOLEAN);
			DefineField("m_iDelay", INTEGER);
			DefineField("m_bDelayed", BOOLEAN);
			DefineField("m_startTime", TIME);
			DefineField("m_bWaitForBeginSequence", BOOLEAN);
			DefineField("m_saved_effects", INTEGER);
			DefineField("m_savedFlags", INTEGER);
			DefineField("m_savedCollisionGroup", INTEGER);
			DefineField("m_interruptable", BOOLEAN);
			DefineField("m_sequenceStarted", BOOLEAN);
			DefineField("m_hTargetEnt", EHANDLE);
			DefineField("m_hNextCine", EHANDLE);
			DefineField("m_hLastFoundEntity", EHANDLE);
			DefineField("m_hForcedTarget", EHANDLE);
			DefineField("m_bDontCancelOtherSequences", BOOLEAN);
			DefineField("m_bForceSynch", BOOLEAN);
			DefineField("m_bThinking", BOOLEAN);
			DefineField("m_bInitiatedSelfDelete", BOOLEAN);
			DefineField("m_bIsTeleportingDueToMoveTo", BOOLEAN);
			DefineField("m_matInteractionPosition", VMATRIX);
			DefineField("m_hInteractionRelativeEntity", EHANDLE);
			DefineField("m_bTargetWasAsleep", BOOLEAN);
			DefineThinkFunc("ScriptThink");
			DefineInputFunc("MoveToPosition", "InputMoveToPosition", VOID);
			DefineInputFunc("BeginSequence", "InputBeginSequence", VOID);
			DefineInputFunc("CancelSequence", "InputCancelSequence", VOID);
			DefineKeyField("m_iPlayerDeathBehavior", "onplayerdeath", INTEGER);
			DefineInputFunc("ScriptPlayerDeath", "InputScriptPlayerDeath", VOID);
			DefineOutput("m_OnBeginSequence", "OnBeginSequence");
			DefineOutput("m_OnEndSequence", "OnEndSequence");
			DefineOutput("m_OnPostIdleEndSequence", "OnPostIdleEndSequence");
			DefineOutput("m_OnCancelSequence", "OnCancelSequence");
			DefineOutput("m_OnCancelFailedSequence", "OnCancelFailedSequence");
			DefineOutput("m_OnScriptEvent[0]", "OnScriptEvent01");
			DefineOutput("m_OnScriptEvent[1]", "OnScriptEvent02");
			DefineOutput("m_OnScriptEvent[2]", "OnScriptEvent03");
			DefineOutput("m_OnScriptEvent[3]", "OnScriptEvent04");
			DefineOutput("m_OnScriptEvent[4]", "OnScriptEvent05");
			DefineOutput("m_OnScriptEvent[5]", "OnScriptEvent06");
			DefineOutput("m_OnScriptEvent[6]", "OnScriptEvent07");
			DefineOutput("m_OnScriptEvent[7]", "OnScriptEvent08");
			
			BeginDataMap("CTurretTipController", "CPointEntity");
			LinkNamesToMap("floorturret_tipcontroller");
			DefineField("m_bEnabled", BOOLEAN);
			DefineField("m_flSuspendTime", TIME);
			DefineField("m_worldGoalAxis", VECTOR);
			DefineField("m_localTestAxis", VECTOR);
			DefinePhysPtr("m_pController");
			DefineField("m_angularLimit", FLOAT);
			DefineField("m_pParentTurret", CLASSPTR);
			
			BeginDataMap("CAI_SpeechFilter", "CBaseEntity"); // An entity that can be used to control speech behaviour for a group of NPCs.
			LinkNamesToMap("ai_speechfilter");
			DefineKeyField("m_iszSubject", "subject", STRING);
			DefineKeyField("m_flIdleModifier", "IdleModifier", FLOAT);
			DefineKeyField("m_bNeverSayHello", "NeverSayHello", BOOLEAN);
			DefineKeyField("m_bDisabled", "StartDisabled", BOOLEAN);
			DefineInputFunc("Enable", "InputEnable", VOID);
			DefineInputFunc("Disable", "InputDisable", VOID);
			DefineInputFunc("SetIdleModifier", "InputSetIdleModifier", FLOAT);
			
			BeginDataMap("CNPC_Bullseye", "CAI_BaseNPC");
			LinkNamesToMap("npc_bullseye");
			DefineField("m_hPainPartner", EHANDLE);
			DefineKeyField("m_fAutoaimRadius", "autoaimradius", FLOAT);
			DefineKeyField("m_flFieldOfView", "minangle", FLOAT);
			DefineKeyField("m_flMinDistValidEnemy", "mindist", FLOAT);
			DefineThinkFunc("BullseyeThink");
			DefineInputFunc("InputTargeted", "InputTargeted", VOID);
			DefineInputFunc("InputReleased", "InputReleased", VOID);
			DefineOutput("m_OnTargeted", "OnTargeted");
			DefineOutput("m_OnReleased", "OnReleased");
			
			BeginDataMap("CAI_AllySpeechManager", "CLogicalEntity");
			LinkNamesToMap("ai_ally_speech_manager");
			DefineEmbeddedField("m_ConceptCategoryTimers", "CSimpleSimTimer", SPEECH_NUM_CATEGORIES);
			//DEFINE_UTLMAP( m_ConceptTimers, FIELD_STRING, FIELD_EMBEDDED ), // todo
		}
	}
}